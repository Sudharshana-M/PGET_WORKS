--TASK 3

--1. Write an SQL query to retrieve a list of all orders along with customer information (e.g.,
--customer name) for each order.

select o.OrderID, o.OrderDate, o.TotalAmount , o.OrderStatus , c.CustomerID, c.FirstName,c.LastName,c.Email,c.Phone,c.Address ,c.OrderCount
from orders o
left JOIN Customers c 
on o.CustomerID = c.CustomerID;


--2. Write an SQL query to find the total revenue generated by each electronic gadget product.
--Include the product name and the total revenue
select p.ProductName, 
    SUM(od.Quantity * p.Price) AS TotalRevenue
from OrderDetails od
inner join Products p ON od.ProductID = p.ProductID
GROUP BY p.ProductName

--3. Write an SQL query to list all customers who have made at least one purchase. Include their
--names and contact information.

SELECT  c.FirstName, c.LastName , c.Email, c.Phone
FROM Customers c
 inner JOIN Orders o ON c.CustomerID = o.CustomerID;


 --4. Write an SQL query to find the most popular electronic gadget, which is the one with the highest
--total quantity ordered. Include the product name and the total quantity ordered.
select top  1 p.ProductName, sum(od.Quantity) as TotalQuantityOrdered
from OrderDetails od
inner JOIN Products p on od.ProductID = p.ProductID
group by p.ProductName
order by TotalQuantityOrdered DESC;

--5. Write an SQL query to retrieve a list of electronic gadgets along with their corresponding categories.

alter table  Products
--add constraint ct_category check (categories IN ('Laptop', 'Headphones', 'Smartphone', 'Smartwatch','Tablet','Monitor','Keyboard','Mouse','Speakers','Printer'));
add categories varchar(50);

SELECT ProductName, categories
FROM Products;

--6. Write an SQL query to calculate the average order value for each customer. Include the
--customer's name and their average order value.

select  c.FirstName,c.LastName, AVG(o.TotalAmount) as AverageOrderValue
from Customers c
inner JOIN Orders o on c.CustomerID = o.CustomerID
group by c.FirstName,c.LastName;


--7. Write an SQL query to find the order with the highest total revenue. Include the order ID,
--customer information, and the total revenue.

select top  1 o.OrderID, c.FirstName,c.LastName, c.Email,c.Phone,c.address, o.TotalAmount AS TotalRevenue
from Orders o
inner JOIN Customers c on o.CustomerID = c.CustomerID
order by  o.TotalAmount desc;


--8. Write an SQL query to list electronic gadgets and the number of times each product has been ordered.


select p.ProductID, p.ProductName, count(od.ProductID) as NumberOfOrders
from Products p
inner join OrderDetails od on p.ProductID = od.ProductID
group by  p.ProductID, p.ProductName
order by  NumberOfOrders desc;


--9. Write an SQL query to find customers who have purchased a specific electronic gadget product.
--Allow users to input the product name as a parameter.

SELECT DISTINCT c.CustomerID, c.FirstName, c.Lastname 
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
WHERE p.ProductName = 'keyboard';

--10. Write an SQL query to calculate the total revenue generated by all orders placed within a
--specific time period. Allow users to input the start and end dates as parameters.



SELECT SUM(o.TotalAmount) AS TotalRevenue
FROM Orders o
WHERE o.OrderDate BETWEEN '2025-03-18' AND '2025-03-18'